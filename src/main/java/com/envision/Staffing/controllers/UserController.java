package com.envision.Staffing.controllers;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.envision.Staffing.model.User;
import com.envision.Staffing.services.UserService;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/users")
public class UserController {

	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserService userService;

	Logger log = Logger.getLogger(UserController.class);

	@PostMapping(path = "/add") // Map ONLY POST Requests
	public @ResponseBody String addNewUser(@RequestParam String name, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		log.info("Called the endpoint /add for adding new User");
		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userService.createOrUpdateUser(n);
		return "Saved";
	}

	@GetMapping(path = "/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		log.info("Called the endpoint /all for getting all User");
		return userService.getAllUsers();
	}

}
